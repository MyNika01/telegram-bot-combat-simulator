package demo.telegrambotcombatsimulator.entity;

import demo.telegrambotcombatsimulator.enums.PlayerStatusType;
import demo.telegrambotcombatsimulator.enums.DirectionStatusType;

import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

import static demo.telegrambotcombatsimulator.enums.DirectionStatusType.D_EMPTY;
import static demo.telegrambotcombatsimulator.enums.PlayerStatusType.P_EMPTY;
import static demo.telegrambotcombatsimulator.service.CombatService.MAX_HP;

@Getter
@Setter
@ToString
public class Player {

    private String name;
    private int health;
    private DirectionStatusType attackDirection;
    private DirectionStatusType defenseDirection;
    private PlayerStatusType status;
    private String message;

    public Player() {
        this.name = "empty";
        this.health = MAX_HP;
        this.attackDirection = D_EMPTY;
        this.defenseDirection = D_EMPTY;
        this.status = P_EMPTY;
        this.message = "empty";
    }

    /**
     * –ü—Ä–æ—Å—Ç–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–∫—É message –≤ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
     */
    public void setMessageAsBattleResult(DirectionStatusType enemyPlayerAttack, DirectionStatusType playerDefense, DirectionStatusType playerAttack, DirectionStatusType enemyPlayerDefense, int playerHealth, int enemyHealth) {

        this.message =
                "–°–æ–ø–µ—Ä–Ω–∏–∫ –Ω–∞–Ω—ë—Å —É–¥–∞—Ä –≤ " + enemyPlayerAttack +
                        "‚öî->" + enemyPlayerAttack.toEmoji() + ", –∞ –≤—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞—â–∏—Ç—É –Ω–∞ " + playerDefense +
                        "\uD83D\uDEE1->" + playerDefense.toEmoji() + "\n" +

                        attackResult(enemyPlayerAttack, playerDefense) +

                        "–í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ " + playerHealth + "/" + MAX_HP + " " + healthToEmoji(playerHealth) + "\n\n" +

                        "–í—ã –Ω–∞–Ω–µ—Å–ª–∏ —É–¥–∞—Ä –≤ " + playerAttack +
                        "‚öî->" + playerAttack.toEmoji() + ", –∞ —Å–æ–ø–µ—Ä–Ω–∏–∫ –ø–æ—Å—Ç–∞–≤–∏–ª –∑–∞—â–∏—Ç—É –Ω–∞ " + enemyPlayerDefense +
                        "\uD83D\uDEE1->" + enemyPlayerDefense.toEmoji() + "\n" +

                        attackResult(playerAttack, enemyPlayerDefense) +

                        "–ó–¥–æ—Ä–æ–≤—å–µ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞ " + enemyHealth + "/" + MAX_HP + " " + healthToEmoji(enemyHealth);
    }

    /**
     * –ü–µ—Ä–µ–≤–æ–¥–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–¥–æ—Ä–æ–≤—å—è –≤ –∫–æ–¥ Emoji
     */
    private String healthToEmoji(int health) {

        StringBuilder emoji = new StringBuilder();

        for (int i = 0; i < MAX_HP; i = i + 10) {
            if (i < health) emoji.append("‚ù§");
            else emoji.append("\uD83D\uDDA4"); // –í—ã–±—Ä–∞—Ç—å –ª–∏–±–æ üñ§, –ª–∏–±–æ üíî. –¢–µ–∫—É—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç - üñ§
        }

        return emoji.toString();
    }

    /**
     * –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞—Ç–∞–∫–∏ –ø–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º
     */
    private String attackResult (DirectionStatusType attack, DirectionStatusType defense) {

        return attack==defense ? "–ë–ª–æ–∫ —É–¥–∞—Ä–∞!\uD83D\uDEE1\n" : "–£—Å–ø–µ—à–Ω—ã–π —É–¥–∞—Ä!\uD83E\uDE78\n";
    }
}